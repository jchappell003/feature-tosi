name: Corporate Data Warehouse
shortName: corpedw
version: 1.0.0
owner: DBA
ingredients:
  - "@azbake/ingredient-arm@~0"
  - "@azbake/ingredient-databricks@~0"
  - "@azbake/ingredient-datafactoryv2@~0"
  - "@azbake/ingredient-sql-dwh@~0"
  - "@azbake/ingredient-sqldb@~0"
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'Publish Artifact: drop'
    publishLocation: 'Container'
  - "@azbake/ingredient-sqlserver-logical@~0"
  - "@azbake/ingredient-storage@~0"
  - "@azbake/ingredient-event-hub-namespace@~0"
resourceGroup: true
parallelRegions: false
variables:
  vnetRuleName: "NonProdSQLSubnet"
  vnetResourceGroup: "RG_NONPROD_EAST_Network"
  vnetName: "VNET_NONPROD_EAST"
  subnetName: "SQL"
  StorageNetworkAcls:
    bypass: AzureServices
    virtualNetworkRules:
    - vnetRuleName:
      vnetResourceGroup: "RG_NONPROD_EAST_Network"
      vnetName: "VNET_NONPROD_EAST"
      subnetName: "SQL"
      action: "Allow"
    ipRules:
    - value: "74.142.158.18"
      action: "Allow"
    defaultAction: "Deny"
  SqlServerNetworkRules:
    virtualNetworkRules:
      - vnetRuleName: "NonProdSQLSubnet"
        vnetResourceGroup: "RG_NONPROD_EAST_Network"
        vnetName: "VNET_NONPROD_EAST"
        subnetName: "SQL"
  FirewallRules:
    FirewallRules: 
      - startip: "38.122.206.162"
        endip: "38.122.206.162"
        name: "Davaco"
      - startip: "69.2.197.65"
        endip: "69.2.197.65"
        name: "Louisville"
      - startip: "74.142.158.18"
        endip: "74.142.158.18"
        name: "Olympia"
      - startip: "97.107.119.69"
        endip: "97.107.119.69"
        name: "Dallas"
      - startip: "0.0.0.0"
        endip: "0.0.0.0"
        name: "AllowAllWindowsAzureIps"
recipe:
  sqldwh-deploy:
    properties:
      type: "@azbake/ingredient-sql-dwh"
      source: ""
      parameters:
        databaseName : "CorporateDataWarehouse"
        skuName : "DW100C"
        serverName : "[sqlserverlogical.create_resource_name()]"
        collation : "SQL_Latin1_General_CP1_CI_AS"
        databaseTags : {}
    dependsOn:
       - sqlserverlogicaldeploy
  sqldb-deploy:
    properties:
      type: "@azbake/ingredient-sqldb"
      source: ""
      parameters:
        serverName : "[sqlserverlogical.create_resource_name()]"
        collation : "SQL_Latin1_General_CP1_CI_AS"
        databaseName : "Configuration_EDW"
        tier : "Basic"
        skuName : "Basic"
        maxSizeBytes : 2147483648
        databaseTags :  {}
    dependsOn:
       - sqlserverlogicaldeploy
  sqlserverlogicaldeploy:
    properties:
      type: "@azbake/ingredient-sqlserver-logical"
      source: ""
      parameters:
        serverName : "[sqlserverlogical.create_resource_name()]"
        administratorLogin : "[coreutils.variable('SqlServerAdministratorLogin')]"
        administratorLoginPassword : "[coreutils.variable('SqlServerAdministratorLoginPassword')]"
        allowAzureIPs : true        
  sqlserverlogicalnetworkdeploy:
    properties:
      type: "@azbake/ingredient-arm"
      source: "./SqlServerVirtualNetworkRules.json"
      parameters:
        SqlServerName : "[sqlserverlogical.create_resource_name()]"
        virtualNetworkRules : "[coreutils.variable('SqlServerNetworkRules')]"         
    dependsOn:
       - sqlserverlogicaldeploy
  sqlserverlogicalfirewallRulesdeploy:
    properties:
      type: "@azbake/ingredient-arm"
      source: "./SqlServerVirtualFireWallRules.json"
      parameters:
        SqlServerName : "[sqlserverlogical.create_resource_name()]"
        firewallRules : "[coreutils.variable('FirewallRules')]"          
    dependsOn:
       - sqlserverlogicaldeploy
  storagedeploy:
    properties:
      type: "@azbake/ingredient-storage"
      source: ""
      parameters:
        storageAccountName: "[storage.create_resource_name()]"
        IsHttpsTrafficOnly : true
        IsHnsEnabled : true
        NetworkAcls : "[coreutils.variable('StorageNetworkAcls')]"
  datafactorydeploy:
    properties:
      type: "@azbake/ingredient-datafactoryv2"
      source: ""
      parameters:
        name : "[datafactory.create_resource_name()]"
  databricks-deploy:
    properties:
      type: "@azbake/ingredient-databricks"
      source: ""
      parameters: 
        workspaceName : "[DataBricks.create_resource_name()]"
        tier : "premium"
  datafactorydeploySHIR:
    properties:
      type: "@azbake/ingredient-arm"
      source: "./AzureDataFactorySelfHostedIR.json"
      parameters:
        IntegrationRunTimeName : "SelfHostIR"
        DataFactoryName : "[datafactory.create_resource_name()]"
    dependsOn:
       - datafactorydeploy
  datafactorydeploySSISIR:
    properties:
      type: "@azbake/ingredient-arm"
      source: "./AzureDataFactorySSISIR.json"
      parameters:
        IntegrationRunTimeName : "SSISIR"
        SelfHostedIntegrationRunTimeName : "SelfHostIR"
        BlobStorageName : "[storage.create_resource_name()]"
        DataFactoryName : "[datafactory.create_resource_name()]"
        SqlServerName : "[sqlserverlogical.create_resource_name()]"
        CatalogPricingTier : "Basic"
        VirtualNetworkResourceGroup : "[coreutils.variable('vnetResourceGroup')]"
        VirtualNetwork : "[coreutils.variable('vnetName')]"
        Subnet : "[coreutils.variable('subnetName')]"
    dependsOn:
       - datafactorydeploy
       - sqlserverlogicaldeploy
       - storagedeploy
  keyvault:
    properties:
      type: "@azbake/ingredient-arm"
      source: "./AzureKeyVault.json"
      parameters:
        name: "corporatedatawarehousekeyvault"